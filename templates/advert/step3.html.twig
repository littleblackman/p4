{% block body %}
    <div id="wrapper">
        <div id="container">
            <div id="welcome">
                <h1><span>Projet Stripe</span> Mentorat OpenClassroom</h1>
            </div>

            <div id="status">
                <p>
                    <svg id="icon-status" width="1792" height="1792" viewBox="0 0 1792 1792" xmlns="<a href="<a href="URL_3WORG/2000/svg"><a href="<a href="URL_3WORG/2000/svg">URL_3WORG/2000/svg</a>"><a href="URL_3WORG/2000/svg">URL_3WORG.org/2000/svg</a></a></a>"><a href="URL_3WORG/2000/svg"><a href="URL_3WORG/2000/svg"><a href="URL_3WORG/2000/svg">URL_3WORG/2000/svg</a></a></a></a>"><path d="M1671 566q0 40-28 68l-724 724-136 136q-28 28-68 28t-68-28l-136-136-362-362q-28-28-28-68t28-68l136-136q28-28 68-28t68 28l294 295 656-657q28-28 68-28t68 28l136 136q28 28 28 68z" fill="#759E1A"></path></svg>

                    Vous Ãªtes sur le point de payer un article qui vaut une petite fortune ! (995 francs, heu euros !)                  
                    <script src="https://js.stripe.com/v3/"></script>

                    <form action="{{ path('charge') }}"  method="post" id="payment-form">

                    <div class="form-row">
                        <label for="card-element">
                        Credit or debit card
                        </label>
                        <div id="card-element">
                        <!-- A Stripe Element will be inserted here. -->
                        </div>

                        <!-- Used to display form errors. -->
                        <div id="card-errors" role="alert"></div>
                    </div>

                    <button>Submit Payment</button>
                    </form>
                </p>
            </div>
        </div>
    </div>


    {% block stylesheets %}
        <style>

            /**
            * The CSS shown here will not be introduced in the Quickstart guide, but shows
            * how you can use CSS to style your Element's container.
            */
            .StripeElement {
            box-sizing: border-box;

            height: 40px;

            padding: 10px 12px;

            border: 1px solid transparent;
            border-radius: 4px;
            background-color: white;

            box-shadow: 0 1px 3px 0 #e6ebf1;
            -webkit-transition: box-shadow 150ms ease;
            transition: box-shadow 150ms ease;
            }

            .StripeElement--focus {
            box-shadow: 0 1px 3px 0 #cfd7df;
            }

            .StripeElement--invalid {
            border-color: #fa755a;
            }

            .StripeElement--webkit-autofill {
            background-color: #fefde5 !important;
            }


            body { background: #F5F5F5; font: 18px/1.5 sans-serif; }
            h1, h2 { line-height: 1.2; margin: 0 0 .5em; }
            h1 { font-size: 36px; }
            h2 { font-size: 21px; margin-bottom: 1em; }
            p { margin: 0 0 1em 0; }
            a { color: #0000F0; }
            a:hover { text-decoration: none; }
            code { background: #F5F5F5; max-width: 100px; padding: 2px 6px; word-wrap: break-word; }
            #wrapper { background: #FFF; margin: 1em auto; max-width: 800px; width: 95%; }
            #container { padding: 2em; }
            #welcome, #status { margin-bottom: 2em; }
            #welcome h1 span { display: block; font-size: 75%; }
            #icon-status, #icon-book { float: left; height: 64px; margin-right: 1em; margin-top: -4px; width: 64px; }
            #icon-book { display: none; }

            @media (min-width: 768px) {
                #wrapper { width: 80%; margin: 2em auto; }
                #icon-book { display: inline-block; }
                #status a, #next a { display: block; }

                @-webkit-keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
                @keyframes fade-in { 0% { opacity: 0; } 100% { opacity: 1; } }
                .sf-toolbar { opacity: 0; -webkit-animation: fade-in 1s .2s forwards; animation: fade-in 1s .2s forwards;}
                     
            }
        </style>
    {% endblock %}

    {% block javascripts %}

    <script>

        // Create a Stripe client.
        var stripe = Stripe('pk_test_JR34yEb3YAi1CfilMSdRAVTH00GVziuaPR');

        // Create an instance of Elements.
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        // (Note that this demo uses a wider set of styles than the guide below.)
        var style = {
        base: {
            color: '#32325d',
            fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
            fontSmoothing: 'antialiased',
            fontSize: '16px',
            '::placeholder': {
            color: '#aab7c4'
            }
        },
        invalid: {
            color: '#fa755a',
            iconColor: '#fa755a'
        }
        };

        // Create an instance of the card Element.
        var card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        card.addEventListener('change', function(event) {
        var displayError = document.getElementById('card-errors');
        if (event.error) {
            displayError.textContent = event.error.message;
        } else {
            displayError.textContent = '';
        }
        });

        // Handle form submission.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function(event) {
        event.preventDefault();

        stripe.createToken(card).then(function(result) {
            if (result.error) {
            // Inform the user if there was an error.
            var errorElement = document.getElementById('card-errors');
            errorElement.textContent = result.error.message;
            } else {
            // Send the token to your server.
            stripeTokenHandler(result.token);
            }
        });
        });

        // Submit the form with the token ID.
        function stripeTokenHandler(token) {
        // Insert the token ID into the form so it gets submitted to the server
        var form = document.getElementById('payment-form');
        var hiddenInput = document.createElement('input');
        hiddenInput.setAttribute('type', 'hidden');
        hiddenInput.setAttribute('name', 'stripeToken');
        hiddenInput.setAttribute('value', token.id);
        form.appendChild(hiddenInput);

        // Submit the form
        form.submit();
        }

    </script>

    {% endblock %}

{% endblock %}